# 薄荷签到-MySQL数据库表设计

## 建立数据库
create DATABASE phdChorusRegist

## contact表
id INT // 主键
name TINYTEXT// 姓名
part TINYTEXT // 所在声部
location TINYTEXT // 所在园区
include_in_statics BOOLEAN //是否纳入统计范围内，默认为true

建表语句
CREATE TABLE `phdChorusRegist`.`contact` ( `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键' , `name` TINYTEXT NOT NULL COMMENT '姓名' , `part` TINYTEXT NOT NULL COMMENT '声部' , `location` TINYTEXT NOT NULL COMMENT '所在园区' , `include_in_statics` BOOLEAN NOT NULL DEFAULT TRUE COMMENT '是否纳入统计范围' , PRIMARY KEY (`id`)) ENGINE = InnoDB CHARSET=utf8 COLLATE utf8_unicode_ci COMMENT = '博士合唱团团员';

## regist_table签到表
id INT // 主键
date DATE //日期
type TINYTEXT //类型
location TINYTEXT // 签到所在园区

建表语句
CREATE TABLE `phdChorusRegist`.`regist_table` ( `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键' , `date` DATE NOT NULL , `type` TINYTEXT NOT NULL , `location` TINYTEXT NOT NULL , PRIMARY KEY (`id`)) ENGINE = InnoDB CHARSET=utf8 COLLATE utf8_unicode_ci COMMENT = '签到表';

## regist_info签到信息表
id INT //主键
regist_table_id INT // 外键，连接regist_table表
contact_id INT // 外键，连接contact表
attend BOOLEAN //是否到场

建表语句
CREATE TABLE `phdChorusRegist`.`regist_info` ( `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键' , `regist_table_id` INT NOT NULL COMMENT '外键regsit_table' , `contact_id` INT NOT NULL COMMENT '外键contact' , `attend` BOOLEAN NOT NULL DEFAULT FALSE COMMENT '是否到场' , PRIMARY KEY (`id`)) ENGINE = InnoDB CHARSET=utf8 COLLATE utf8_unicode_ci COMMENT = '签到信息';

// 加入外键约束
CREATE TABLE `phdChorusRegist`.`regist_info` ( `id` INT NOT NULL AUTO_INCREMENT COMMENT '主键' , `regist_table_id` INT UNSIGNED NOT NULL COMMENT '外键regsit_table' , `contact_id` INT UNSIGNED NOT NULL COMMENT '外键contact' , `attend` BOOLEAN NOT NULL DEFAULT FALSE COMMENT '是否到场' , PRIMARY KEY (`id`) , FOREIGN KEY(regist_table_id) REFERENCES regist_table(id) ON DELETE CASCADE, FOREIGN KEY(contact_id) REFERENCES contact(id) ON DELETE CASCADE) ENGINE = InnoDB CHARSET=utf8 COLLATE utf8_unicode_ci COMMENT = '签到信息';




# 业务中要用到的mysql语句

## 创建签到表
SELECT id 
FROM regist_table 
WHERE date='2017-08-06' AND type='大排' AND location='中关村'

如果上述语句返回不为空，说明签到表已存在，无需重复创建签到表，否则继续如下操作

INSERT INTO regist_table(date, type, location)
VALUES('2017-08-06', '大排', '中关村')

## 签到
SELECT id 
FROM regist_table 
WHERE date='2017-08-06' AND type='大排' AND location='中关村'

如上述语句返回空，则说明签到表不存在，签到失败，否则继续如下操作；

取出上述id，令其为tableID，进行以下操作

SELECT id 
FROM regist_info 
WHERE regist_table_id=tableID AND contact_id=contactID

其中contactID由客户端提供。如果上述语句返回不为空，则update表，否则插入行

update表
UPDATE regist_info 
SET attend='true' 
WHERE regist_table_id=tableID AND contact_id=contactID

insert行
INSERT INTO regist_info(regist_table_id, contact_id, attend)
VALUES(tableID, contactID, 'true')

## 添加新团员
SELECT id 
FROM contact 
WHERE name='蓝胖子' AND part='T2' AND location='中关村'

如果上述语句返回不为空，说明该团员已存在，无需重复添加，否则进行以下操作
INSERT INTO contact(name, part, location)
VALUES('蓝胖子', 'T2', '中关村')

## 查询各声部(在统计范围内)的团员，用于签到和签到信息统计
SELECT * 
FROM contact 
WHERE include_in_statics='true' 
GROUP BY part

## 查询从某个日期开始，最近的10张签到表
SELECT *
FROM regist_table
WHERE date < theDate
ORDER by date DESC
LIMIT 10

其中theDate由客户端提供

## 查询某张签到表中团员的出勤
SELECT contact.name
FROM contact
INNER JOIN regist_info ON contact.id = regist_info.contact_id
WHERE regist_info.regist_table_id = theTableID AND contact.location = contactLocation
GROUP BY regist_info.attend

其中，theTableID由客户端提供

## 查询某段时间内的签到表
SELECT *
FROM regist_table
WHERE date BETWEEN fromDate AND toDate

其中fromDate和toDate由客户端提供











